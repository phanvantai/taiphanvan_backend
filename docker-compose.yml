# Docker Compose configuration for TaiPhanVan Backend
# Updated May 7, 2025

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blog_api
    restart: unless-stopped
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      - postgres
    environment:
      - API_PORT=${API_PORT}
      - GIN_MODE=${GIN_MODE}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - DB_SSL_MODE=${DB_SSL_MODE}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_EXPIRY=${JWT_ACCESS_EXPIRY}
      - JWT_REFRESH_EXPIRY=${JWT_REFRESH_EXPIRY}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      # Admin user creation configuration
      - CREATE_DEFAULT_ADMIN=${CREATE_DEFAULT_ADMIN}
      - DEFAULT_ADMIN_USERNAME=${DEFAULT_ADMIN_USERNAME}
      - DEFAULT_ADMIN_EMAIL=${DEFAULT_ADMIN_EMAIL}
      - DEFAULT_ADMIN_PASSWORD=${DEFAULT_ADMIN_PASSWORD}
      # Editor user creation configuration
      - CREATE_DEFAULT_EDITOR=${CREATE_DEFAULT_EDITOR}
      - DEFAULT_EDITOR_USERNAME=${DEFAULT_EDITOR_USERNAME}
      - DEFAULT_EDITOR_EMAIL=${DEFAULT_EDITOR_EMAIL}
      - DEFAULT_EDITOR_PASSWORD=${DEFAULT_EDITOR_PASSWORD}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - CLOUDINARY_UPLOAD_FOLDER=${CLOUDINARY_UPLOAD_FOLDER}
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--spider", "http://localhost:${API_PORT}/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  postgres:
    image: postgres:15-alpine
    container_name: blog_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Changed from "5432:5432" to avoid potential port conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  default:
    name: blog-network
    driver: bridge

volumes:
  postgres_data: